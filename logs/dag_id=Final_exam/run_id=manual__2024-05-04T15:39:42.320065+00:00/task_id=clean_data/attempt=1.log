[2024-05-04T15:40:12.337+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-05-04T15:40:12.354+0000] {taskinstance.py:2073} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Final_exam.clean_data manual__2024-05-04T15:39:42.320065+00:00 [queued]>
[2024-05-04T15:40:12.360+0000] {taskinstance.py:2073} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Final_exam.clean_data manual__2024-05-04T15:39:42.320065+00:00 [queued]>
[2024-05-04T15:40:12.360+0000] {taskinstance.py:2303} INFO - Starting attempt 1 of 2
[2024-05-04T15:40:12.374+0000] {taskinstance.py:2327} INFO - Executing <Task(PythonOperator): clean_data> on 2024-05-04 15:39:42.320065+00:00
[2024-05-04T15:40:12.381+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=111) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-05-04T15:40:12.382+0000] {standard_task_runner.py:63} INFO - Started process 113 to run task
[2024-05-04T15:40:12.383+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'Final_exam', 'clean_data', 'manual__2024-05-04T15:39:42.320065+00:00', '--job-id', '45', '--raw', '--subdir', 'DAGS_FOLDER/Project.py', '--cfg-path', '/tmp/tmpdynxa2_g']
[2024-05-04T15:40:12.384+0000] {standard_task_runner.py:91} INFO - Job 45: Subtask clean_data
[2024-05-04T15:40:12.421+0000] {task_command.py:426} INFO - Running <TaskInstance: Final_exam.clean_data manual__2024-05-04T15:39:42.320065+00:00 [running]> on host 73ada3aeb297
[2024-05-04T15:40:12.495+0000] {taskinstance.py:2644} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='ha20040204@gmail.com' AIRFLOW_CTX_DAG_OWNER='HA' AIRFLOW_CTX_DAG_ID='Final_exam' AIRFLOW_CTX_TASK_ID='clean_data' AIRFLOW_CTX_EXECUTION_DATE='2024-05-04T15:39:42.320065+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-05-04T15:39:42.320065+00:00'
[2024-05-04T15:40:12.496+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-05-04T15:40:12.513+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:12.514+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:13.686+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:13.686+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:14.715+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:14.715+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:15.241+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:15.242+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:15.954+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:15.954+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:17.821+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:17.822+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:19.138+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:19.138+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:20.520+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:20.521+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:22.225+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:22.225+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:22.878+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:22.878+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:23.518+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:23.518+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:24.212+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:24.213+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:25.255+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:25.255+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:26.273+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:26.273+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:27.260+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:27.262+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:29.912+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:29.913+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:31.285+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:31.286+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:31.538+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:31.538+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:31.640+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:31.640+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:32.027+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:32.028+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:32.271+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:32.271+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:32.413+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:32.414+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:32.526+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:32.527+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:32.895+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:32.896+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:33.563+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-05-04T15:40:33.563+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-05-04T15:40:34.198+0000] {logging_mixin.py:188} INFO - Successfully.
[2024-05-04T15:40:34.198+0000] {python.py:237} INFO - Done. Returned value was: True
[2024-05-04T15:40:34.200+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-05-04T15:40:34.219+0000] {taskinstance.py:1205} INFO - Marking task as SUCCESS. dag_id=Final_exam, task_id=clean_data, execution_date=20240504T153942, start_date=20240504T154012, end_date=20240504T154034
[2024-05-04T15:40:34.247+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-05-04T15:40:34.265+0000] {taskinstance.py:3482} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-05-04T15:40:34.267+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
