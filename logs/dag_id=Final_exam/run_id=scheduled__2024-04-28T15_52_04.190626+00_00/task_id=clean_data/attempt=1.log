[2024-04-28T15:54:50.206+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2024-04-28T15:54:50.223+0000] {taskinstance.py:2073} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: Final_exam.clean_data scheduled__2024-04-28T15:52:04.190626+00:00 [queued]>
[2024-04-28T15:54:50.228+0000] {taskinstance.py:2073} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: Final_exam.clean_data scheduled__2024-04-28T15:52:04.190626+00:00 [queued]>
[2024-04-28T15:54:50.229+0000] {taskinstance.py:2303} INFO - Starting attempt 1 of 2
[2024-04-28T15:54:50.239+0000] {taskinstance.py:2327} INFO - Executing <Task(PythonOperator): clean_data> on 2024-04-28 15:52:04.190626+00:00
[2024-04-28T15:54:50.245+0000] {warnings.py:110} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61: DeprecationWarning: This process (pid=138) is multi-threaded, use of fork() may lead to deadlocks in the child.
  pid = os.fork()

[2024-04-28T15:54:50.246+0000] {standard_task_runner.py:63} INFO - Started process 144 to run task
[2024-04-28T15:54:50.247+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'Final_exam', 'clean_data', 'scheduled__2024-04-28T15:52:04.190626+00:00', '--job-id', '11', '--raw', '--subdir', 'DAGS_FOLDER/Project.py', '--cfg-path', '/tmp/tmp933vm6ya']
[2024-04-28T15:54:50.248+0000] {standard_task_runner.py:91} INFO - Job 11: Subtask clean_data
[2024-04-28T15:54:50.283+0000] {task_command.py:426} INFO - Running <TaskInstance: Final_exam.clean_data scheduled__2024-04-28T15:52:04.190626+00:00 [running]> on host 73ada3aeb297
[2024-04-28T15:54:50.345+0000] {taskinstance.py:2644} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='ha20040204@gmail.com' AIRFLOW_CTX_DAG_OWNER='HA' AIRFLOW_CTX_DAG_ID='Final_exam' AIRFLOW_CTX_TASK_ID='clean_data' AIRFLOW_CTX_EXECUTION_DATE='2024-04-28T15:52:04.190626+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2024-04-28T15:52:04.190626+00:00'
[2024-04-28T15:54:50.346+0000] {taskinstance.py:430} INFO - ::endgroup::
[2024-04-28T15:54:50.362+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:54:50.363+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:54:51.463+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:54:51.463+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:54:52.415+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:54:52.416+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:54:52.906+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:54:52.907+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:54:53.608+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:54:53.609+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:54:55.254+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:54:55.255+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:54:56.486+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:54:56.486+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:54:57.914+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:54:57.915+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:54:59.563+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:54:59.563+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:00.195+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:00.195+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:00.837+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:00.838+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:01.470+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:01.470+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:02.433+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:02.434+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:03.397+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:03.398+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:04.270+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:04.271+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:07.132+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:07.132+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:08.540+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:08.540+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:08.812+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:08.813+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:08.927+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:08.928+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:09.435+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:09.435+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:09.730+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:09.730+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:09.873+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:09.873+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:09.982+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:09.982+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:10.335+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:10.336+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:11.025+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:48: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls.append(round(data.iloc[i][4] - data.iloc[i + 1][4], 2))

[2024-04-28T15:55:11.025+0000] {warnings.py:110} WARNING - /opt/***/dags/Project.py:49: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  ls_rate.append(str(round(ls[i] / data.iloc[i + 1][4] * 100, 2)) + '%')

[2024-04-28T15:55:11.706+0000] {logging_mixin.py:188} INFO - Successfully.
[2024-04-28T15:55:11.706+0000] {python.py:237} INFO - Done. Returned value was: True
[2024-04-28T15:55:11.708+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2024-04-28T15:55:11.728+0000] {taskinstance.py:1205} INFO - Marking task as SUCCESS. dag_id=Final_exam, task_id=clean_data, execution_date=20240428T155204, start_date=20240428T155450, end_date=20240428T155511
[2024-04-28T15:55:11.744+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 0
[2024-04-28T15:55:11.764+0000] {taskinstance.py:3482} INFO - 1 downstream tasks scheduled from follow-on schedule check
[2024-04-28T15:55:11.766+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
